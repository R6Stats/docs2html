extends ../layout.pug

block title
	| API Documentation


mixin properties(props)
	each prop, index in props
		li.property
			//- if prop.properties
			//- 	a=index
			//- 	ul
			//- 		+properties(prop.properties)
			//- if
			h2
				span= index
				| :&nbsp;
				small
					if prop.type
						= prop.type
					else
						- model = getModel(prop.properties)
						if model
							a(href="#model_" + model.name)= model.name
			p= prop.description

mixin model(name, def)
	ul.properties
		+properties(def.properties)

block content
	- function getModel(props) { return keys[Object.keys(props).join('-')]; }
	- function linkify(e) { return e.method + e.path.replace(/\/|}|{/g, ''); }
	.docs
		.row
			.col-xs-9
				h1 Documentation
				hr
				each val, index in sections
					.stats-panel
						.header(id="section_" + index)= index
						each e in val
							.modal.fade(tabindex='-1', id='api_modal_' + e.method + e.path.replace(/\/|}|{/g, ''))
								.modal-dialog
									.modal-content
										.modal-header
											button.close(type='button', data-dismiss='modal')
												span Ã—
											h4.modal-title=e.path
										.modal-body
											p!= md.render(e.description)

											ul.nav-tabs.nav(data-tabs="tabs", id="tabs")
												li.active
													a(href="#request-" + linkify(e), data-toggle="tab") Request
												li
													a(href="#response-" + linkify(e), data-toggle="tab") Response
											.tab-content
												.tab-pane.active(id="request-" + linkify(e))
													if e.parameters
														- path = e.parameters.filter(function(p) {return p.in === 'path'})
														if path.length > 0
															h2 URI (Path)
															each p, index in e.parameters
																h3
																	span= p.name
																	| :&nbsp;
																	small= p.type
																p= p.description
														- query = e.parameters.filter(function(p) {return p.in === 'query'})
														if query.length > 0
															h2 Query
															each p, index in e.parameters
																h3
																	span= p.name
																	| :&nbsp;
																	small= p.type
																p= p.description


												.tab-pane(id="response-" + linkify(e))
													each resp, name in e.responses
														.response
															h2= name
															p= resp.description
															h3 Body
																ul.response-list
																	li
																		span Data Returned:&nbsp;
																		- var name = resp.schema.name;
																		if name
																			small
																				a(href="#model_" + resp.schema.name)= resp.schema.name
																		else
																			- var keyz = Object.keys(resp.schema.properties);
																			| {
																			each x, k in keyz
																				- var prop = resp.schema.properties[x];
																				if prop.type == 'array'
																					- var model = getModel(prop.items.properties)
																					if model
																						= x
																						| :&nbsp;
																						- var text = "Array<" + model.name + ">"
																						a(href="#model_" + model.name)= text
																				else if prop.name
																					= x
																					| :&nbsp;
																					a(href="#model_" + prop.name)= prop.name
																				else
																					= x
																					| :&nbsp;
																					= x.type || 'string'
																				if k + 1 !== keyz.length
																					| ,&nbsp;

																			| }



																	li
																		span Data Type
																		| :&nbsp;
																		small application/json
						.body
							table.api-item
								thead
									tr
								tbody
									each e in val
										tr(data-toggle="modal", data-target="#api_modal_" + e.method + e.path.replace(/\/|}|{/g, ''), id="method_" + e.method + e.path.replace(/\/|}|{/g, ''))
											td(class="method " + e.method)= e.method
											td.path= e.path
											td.summary= e.summary
				.definitions
					each d, index in models
						.stats-panel(id="model_" + index)
							.header.no-upper= index
							.body
								+model(index, d)
			.col-xs-3
				include sidebar.pug